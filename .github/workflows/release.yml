name: Release

on:
  push:
    tags: [v*]

jobs:
  release:
    runs-on: windows-latest
    outputs: 
      output1: ${{ steps.version.outputs.full }}

    steps:
      - uses: nowsprinting/check-version-format-action@v3
        id: version
        with:
          prefix: 'v'

      - name: Version tag only step
        run: |
          echo "Found valid version format in tag!"
          echo "Full version: ${{ steps.version.outputs.full }}"
          echo "Full version without suffix or prefix: ${{ format('{0}.{1}.{2}', steps.version.outputs.major_without_prefix, steps.version.outputs.minor, steps.version.outputs.patch) }}"
          # echo "Major with pre-release: ${{ steps.version.outputs.major_prerelease }}"
        if: steps.version.outputs.is_valid == 'true'
 
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Git
        run: |
          git config --global url."https://user:${{ secrets.GITHUB_TOKEN }}@github".insteadOf https://github
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com  
          
      #- name: Set build number
      #  id: setversion
      #  uses: berglie/assembly-version/set-buildnumber@v1
      #  with: buildnumber: ${{ format('{0}.{1}.{2}', steps.version.outputs.major_without_prefix, steps.version.outputs.minor, steps.version.outputs.patch) }}	

      - name: Run release script
        shell: pwsh
        run: ./SupportingFiles/OOFSponderCoreVersionControl.ps1 -Version ${{ steps.version.outputs.prerelease}}

      - name: Run release script
        shell: pwsh
        run: ./SupportingFiles/release.ps1 -Ring ${{ steps.version.outputs.prerelease}}
